
---
- name: 复制文件
  copy:
    src: '/root/ansible/script/file/borg-linux64'
    dest: "{{ borg_path }}"
    owner: root
    group: root
    mode: 0755


 #/usr/local/borgmatic
# -------------------Debian部分---------------
# - name: Fix broken Python
#   apt:
#     name: python3-venv
#   when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
- block:
  - name: 创建Borgmatic虚拟环境（Debian）
    command: "python3 -m venv {{ borgmatic_dir }}"
    args:
      creates: "{{ borgmatic_dir }}/bin/pip"
      
  - name: 在虚拟环境安装Borgmatic
    pip:
      name: borgmatic
      version: "1.3.5"
      executable: "{{ borgmatic_dir }}/bin/pip"


  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

# -------------------Centos部分---------------

- block:
  - name: 创建Borgmatic虚拟环境（CentOS）
    command: "/usr/bin/virtualenv -p /bin/python3.6  {{ borgmatic_dir }}" 
    args:
      creates: "{{ borgmatic_dir }}"

  
  - name: 在虚拟环境安装Borgmatic
    pip:
      name: borgmatic
      version: "{{ borgmatic_version }}"
      executable: "{{ borgmatic_dir }}/bin/pip"

  when: ansible_distribution == "CentOS" or ansible_distribution == "Red Hat Enterprise Linux"


#------------------公共部分-------------


- name: 创建Borgmatic配置目录
  file:
    path: /etc/borgmatic
    state: directory

- name: 创建Borgmatic临时文件
  command: touch /etc/borgmatic/excludes
  args:
    creates: /etc/borgmatic/excludes
    warn: no

- name: 创建Borgmatic执行文件链接
  file: 
    path: /usr/local/bin/borgmatic
    src: "/usr/local/borgmatic/bin/borgmatic"
    state: link 
  tags: link

- name: 创建备份目录
  file:
    path: /backup
    state: directory
    owner: root
    group: root


- name: 渲染Borgmatic配置文件
  template:
    src: borgmatic-config.yaml.j2
    dest: /etc/borgmatic/config.yaml
    mode: 0600
  tags: text1




- name: 渲染Borgmatic systemd units
  template:
    src: "{{ item }}.j2"
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - borgmatic.service
    - borgmatic.timer



- name: 初始化数据库
  shell: "/usr/local/bin/borgmatic init --encryption none"
  args:
    creates: "/backup/{{ ansible_nodename }}.borg"
    executable: "/bin/bash"


- name: 设置定时任务
  cron:
    name: "backup task"
    user: root
    hour: "1"
    state: present  
    job: "/usr/local/bin/borgmatic -v 1"

# - name: Enable Borgmatic systemd timer
#   systemd:
#     name: borgmatic.timer
#     state: started
#     enabled: yes
#     daemon_reload: yes
#
#- import_tasks: pubkey.yaml
#  when: borg_setup_pubkey
